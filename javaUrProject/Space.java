import greenfoot.*;  // (World, Actor, GreenfootImage, Greenfoot and MouseInfo)

/**
 * The Space class.
 * 
 * Images for spaces were generated by Microsoft Copilot, more info in the acknowledgements document. 
 * 
 * @author 
 * @version 11/20/2024
 */
public class Space extends Actor
{
    /* FIELDS */
    private boolean[] occupiedIndex;
    private boolean starSpace;
    
    /**
     * Space Constructor.
     * 
     * @param safeSpace     boolean value to store whether this is a star/safe space or not.
     */
    public Space(boolean safeSpace)
    {
        occupiedIndex = new boolean[]{false,false};
        this.starSpace = safeSpace;
        if (this.starSpace)
        {
            setImage(new GreenfootImage("Space_star.png"));
        }
        else
        {
            setImage(new GreenfootImage("Space.png"));
        }
        
    }// end constructor Space
    
    /**
     * Act method.
     */
    public void act()
    {}// end method act
    
    /**
     * Getter for the occupied index.
     * 
     * @param playerIndex       index of the current player (int 0 or 1).
     * @return If the space is occupied or not (occupied status). 
     */
    public boolean isOccupied(int playerIndex)
    {
        return occupiedIndex[playerIndex];
    }// end method isOccpuied
    
    /**
     * Setter for the occupied index.
     * 
     * @param playerIndex       index of the current player (int 0 or 1).
     * @param occupied          boolean value to set the occupied status as. 
     */ 
    public void setOccupiedIndex(int playerIndex, boolean occupied)
    {
        this.occupiedIndex[playerIndex] = occupied;
    }// end method setOccupiedIndex
    
    /**
     * Getter for safe space status.
     * 
     * @return If the space is a star space or not. 
     */
    public boolean isStarSpace()
    {
        return starSpace;
    }// end method isStarSpace
}// end class Space
